package org.jsp.supplychainmanagement.service;
import org.jsp.supplychainmanagement.dao.OrderDao;
import org.jsp.supplychainmanagement.dto.ResponseStructure;
import org.jsp.supplychainmanagement.entity.Order;
import org.jsp.supplychainmanagement.exception.IdNotFoundException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

@Service
public class OrderService {

	@Autowired
	private OrderDao orderDao;

	public ResponseEntity<ResponseStructure<Order>> createOrder(Order order, int customer_id) {
		Order saveOrder=orderDao.createOrder(order, customer_id);
		ResponseStructure<Order>responseStructure=new ResponseStructure<Order>();

		if(saveOrder!=null) {
			responseStructure.setStatusCode(HttpStatus.CREATED.value());
			responseStructure.setMessage("Created");
			responseStructure.setData(saveOrder);

			return new ResponseEntity<ResponseStructure<Order>>(responseStructure, HttpStatus.CREATED);
		}
		else
			throw new IdNotFoundException();
	}

	public ResponseEntity<ResponseStructure<Order>> getOrderById(int id) {
		Order order=orderDao.getOrderById(id);
		ResponseStructure<Order>responseStructure=new ResponseStructure<Order>();

		if(order!=null) {
			responseStructure.setStatusCode(HttpStatus.FOUND.value());
			responseStructure.setMessage("Found");
			responseStructure.setData(order);

			return new ResponseEntity<ResponseStructure<Order>>(responseStructure, HttpStatus.FOUND);
		}
		else
			throw new IdNotFoundException();
	}
}
